# Generated by Django 5.2.7 on 2025-10-29 10:08

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("courses", "0003_teacheravailability_teacheravailabilityexception_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="session",
            name="ended_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="session",
            name="provider_room_id",
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name="session",
            name="recording_assets",
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name="session",
            name="started_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name="CourseModule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("content", models.TextField(blank=True, null=True)),
                ("video_url", models.URLField(blank=True, null=True)),
                ("resources", models.JSONField(blank=True, default=list)),
                (
                    "estimated_hours",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                ("is_mandatory", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="courses.course",
                    ),
                ),
                (
                    "prerequisite_modules",
                    models.ManyToManyField(
                        blank=True, related_name="unlocks", to="courses.coursemodule"
                    ),
                ),
            ],
            options={
                "ordering": ["course", "order"],
                "unique_together": {("course", "order")},
            },
        ),
        migrations.CreateModel(
            name="DemoLecture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("subject", models.CharField(max_length=100)),
                ("duration_minutes", models.PositiveIntegerField(default=10)),
                (
                    "original_video",
                    models.FileField(
                        blank=True, null=True, upload_to="demos/original/"
                    ),
                ),
                (
                    "transcoded_video",
                    models.FileField(
                        blank=True, null=True, upload_to="demos/transcoded/"
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="demos/thumbnails/"
                    ),
                ),
                (
                    "file_size_mb",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                ("video_codec", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "video_resolution",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Review"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                ("view_count", models.PositiveIntegerField(default=0)),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("total_ratings", models.PositiveIntegerField(default=0)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="demo_lectures",
                        to="courses.course",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_demos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        limit_choices_to={"role": "TEACHER"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demo_lectures",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="DemoRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("review", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "demo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="courses.demolecture",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"role": "STUDENT"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demo_ratings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LearningRoadmap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("goal", models.TextField()),
                ("target_completion_date", models.DateField(blank=True, null=True)),
                (
                    "estimated_hours_per_week",
                    models.DecimalField(decimal_places=2, default=5.0, max_digits=5),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_completed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"role": "STUDENT"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roadmaps",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ModuleProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_started", models.BooleanField(default=False)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "completion_percentage",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("time_spent_minutes", models.PositiveIntegerField(default=0)),
                (
                    "quiz_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("attempts", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "enrollment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="module_progress",
                        to="courses.enrollment",
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_progress",
                        to="courses.coursemodule",
                    ),
                ),
            ],
            options={
                "ordering": ["module__order"],
            },
        ),
        migrations.CreateModel(
            name="RoadmapCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="courses.course"
                    ),
                ),
                (
                    "roadmap",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.learningroadmap",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="learningroadmap",
            name="courses",
            field=models.ManyToManyField(
                related_name="roadmaps",
                through="courses.RoadmapCourse",
                to="courses.course",
            ),
        ),
        migrations.CreateModel(
            name="SessionMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="courses.session",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="demolecture",
            index=models.Index(
                fields=["status", "teacher"], name="courses_dem_status_1cea13_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="demolecture",
            index=models.Index(
                fields=["subject", "status"], name="courses_dem_subject_e3f539_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="demorating",
            unique_together={("demo", "student")},
        ),
        migrations.AlterUniqueTogether(
            name="moduleprogress",
            unique_together={("enrollment", "module")},
        ),
        migrations.AlterUniqueTogether(
            name="roadmapcourse",
            unique_together={("roadmap", "course")},
        ),
    ]
